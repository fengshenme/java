/*
total 12k
drwxrwxr-x 2 gec gec 4096 9月  28 16:24 A
-rw-rw-r-- 1 gec gec    0 9月  28 16:25 aaa.txt
drwxrwxr-x 2 gec gec 4096 9月  28 16:27 B
drwxrwxr-x 2 gec gec 4096 9月  28 16:24 C

代表当前目录下文件大小的总和为12K（每个目录的大小都按4K算）  
drwxr-xr-x 第一个字符有3种情况：“-”表示普通文件，“d”代表目录“l”代表连接文件，“b”代表设备文件
后面的9个字符每3个为一组，分别代表文件所有者、文件所有者所在用户组、其它用户对文件拥有的权限。每组中3个字符分别代表读、写、执行的权限，
若没有其中的任何一个权限则用“-”表示。
执行的权限有两个字符可选“x”代表可执行，“s”代表套接口文件。紧接着的数字2代表 "A”这个目录下的目录文件数目（这个数目=隐藏目录数目+普通目录数目）。
我们进入“aa”目录用命令 ls -al （为了看到隐藏文件我们加上-a这个参数）.


（上面的第3行中的2代表当前目录中有子目录2个，即.和.. 上面的第4行中的14代表这个目录的上一层目录中有14个子目录。） 
再接下来的root代表这个文件（目录）的属于 用户root 再接下来的root代表这个文件（目录）所属的用户组为 组root 4096 代表文件的大小（字节数），
目录的大小总是为4096字节。 9月  28 16:24 代表文件（目录）的最后访问时间。
A代表文件（目录）在名字。

文件名颜色的含义  
默认色代表普通文件。 
绿色代表可执行文件。 
红色代表tar包文件。   
蓝色代表目录文件。   
水红代表图象文件。
青色代表链接文件。    
黄色代表设备文件。 



3.思考指令里的 -r 递归选项是什么意思？为什么有些要有些不要？

递归，该选项递归地列举当前目录下所有子目录内的内容

似乎大写的 -R 在 UNIX 指令中表示递归操作是一个约定俗成。这du也是一种接口的设计原则zhi，称为最小惊奇dao原则。 
可以看到在常见的文件操作命令中，如 ls、grep、chmod、chown 中，都将大写的 -R 作为递归参数，而 rm 则同时提供小写的 -r 和大写的 -R。
通用使用大写大概是因为在部分命令中，或约定俗成中，小写的 -r 更多地表示逆序（reverse），如 ls 中，因此就将大写的 -R 用作递归。 
最小惊奇原则可以保证用户更容易记忆类似的参数，需要学习的新的东西尽量最少，让用户已有的知识可以最大化的应用在不同的软件上。
这里的 chmod 和其他命令一致采用大写 -R 作为递归参数，正体现了这一设计原则。 
当然，chmod 也可以如 rm 一样，因为没有小写的相关参数与之冲突而同时接纳大小写的 -r 和 -R。


在文件bai系统工作的方式中，目录实际上不是包du含文件的文件夹，而是zhi包含连接到它的“dao子”文件的inode指针的文件。这意味着，从文件系统的角度来看，文件是一个文件，但是目录只是一个包含连接文件列表的文件。

因此，从命令行的角度来看，这样做:

$ cp dir1 copyDir1

基本上意味着将名为dir1的文件复制到名为copyDir1的新文件。就文件系统而言，dir1只是一个文件;只有当文件系统真正检查dir1以查看那一堆位的实际情况时，它才是“目录”这一事实才会显现出来。

r标志告诉文件系统递归地滚动文件/目录树，并将任何&所有可能是该文件的“子”的内容复制到新的位置。

至于为什么这看起来是多余的或冗余的，这实际上可以归结为处理文件系统的历史方法。以及创建一个系统，使其不受所有类型的用户相关错误的影响;偶然的和有意的。

意思是，假设你有一个~/bin文件在你的主目录中，你想复制，但不小心漏掉了~——因为你是人，会犯错误——所以它是这样的/bin:

cp /bin/ ~ / copy_of_bin

由于/bin的“安全网”是一个目录，并且需要-r标志，您可以避免意外地将系统的整个二进制根复制到主目录中。如果这个安全网不存在，就会发生一场小的——或者可能是大的——灾难。

这里的逻辑是，在前gui(图形用户界面)的时代，逻辑/行为约定需要被设置，以避免用户创建可能导致系统死亡的错误。使用-r标志是其中之一。

如果这看起来是多余的，那么只需看看现代GUI系统，就可以将其置于Linux文件系统之上。GUI通过允许轻松地拖放文件和目录来解决基本的用户问题。

但在基于文本的界面领域中，该领域中的许多“用户体验”基本上都是基于逻辑的、基于hueristicl的障碍，这些障碍有助于控制用户，从而避免潜在的灾难。

同样，这也是为什么Linux/Unix文件系统没有默认设置的777权限和sudo权限，以及当用户设置777权限或授予所有人sudo权限时，真正的系统管理员会畏缩不前的原因。这些是确保系统稳定和尽可能“用户证明”的基本工作;任何急于缩短这些惯例的人都很可能在不知情的情况下对他们的系统造成损害。

附加信息:Unix堆栈交换站点上的另一个答案很好地解释了为什么目录的非递归副本存在问题;重点是我的。

嗯，没有-R标志，只能复制文件，因为不太常见的情况是，有人想非递归复制一个目录:非递归复制只会导致目录的第二个名称，直接指向相同的目录结构。因为这很少是人们想要的，实际上有一个单独的程序来做这个(ln)，不允许目录的非递归副本。

因此，如果一个目录实际上是一个包含inode项的文件，那么直接复制该文件就相当于硬链接的工作方式。这不是任何人想要的。
*/